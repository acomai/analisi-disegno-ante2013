<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>analisi-disegno.com - novembre 2000 - Strumenti UML: criteri di scelta e di utilizzo</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
<link rel="stylesheet" type="text/css" href="../../analisi-disegno.css" />
</head>

<body>

<p class="iniziale">analisi-disegno.com</p>
	<p class="menu"><a href="../../index.html">Homepage</a>&nbsp;| 
	<a href="../../notiziario.html">Notiziario</a>&nbsp;| <a href="../../welcome_e.html">In English</a></p>
    <hr />
<p class=MsoNormal>(pubblicato su ZeroUno n.226, novembre 2000)</p>

<h1>Strumenti UML: criteri di
scelta e di utilizzo</h1>

<p>I
tool di Visual Modeling UML sono oggetto di attenzione da parte di molte
organizzazioni. La scelta pu&ograve; essere difficile. Ed occorre molta cura per
ottenere i risultati sperati dall'investimento.</p>



<p>UML (Unified Modeling Language), per chi non lo conosca, &egrave;
il linguaggio standard per la progettazione e la rappresentazione dei sistemi
software. Approvato da OMG (Object Management Group) nel novembre 1997, UML &egrave;
attualmente oggetto di un processo di approvazione come standard ISO, che
dovrebbe concludersi entro il 2001.</p>



<p>Molte aziende, in Italia e nel resto del mondo, stanno
adottando UML, innanzitutto con l'obiettivo di migliorare la comunicazione
relativa ai progetti software, all'interno dell'organizzazione e nei confronti
di terze parti. </p>

<p>In quanto notazione universale, UML costituisce un
linguaggio comune per l'analisi, il disegno, la documentazione dei sistemi. Pu&ograve;
quindi agevolare il flusso comunicativo sia all'interno delle aziende che
sviluppano software, che nel rapporto tra clienti e fornitori di sistemi. </p>

<p>Non a caso, uno dei campi nei quali l'utilizzo di UML si sta
maggiormente diffondendo &egrave; quello della gestione delle subforniture nell'ambito
della progettazione di sistemi complessi. Dove societ&agrave; diverse concorrono allo
sviluppo, producendo soluzioni parziali da integrare in un'architettura
complessiva, la documentazione in formato UML agevola la comunicazione tra le
parti. </p>



<p>Il secondo motivo che favorisce l'adozione di UML &egrave; legato a
un rinnovato interesse per le attivit&agrave; di progettazione (analisi e disegno). </p>

<p>I sistemi distribuiti diventano sempre pi&ugrave; complessi, e,
proprio per poterne governare la complessit&agrave;, risulta necessario dedicare tempo
alla definizione della loro architettura, logica e fisica, sotto forma di
rappresentazioni sintetiche (modelli), prima di buttarsi a capofitto nella
scrittura del codice. Inoltre, le tecnologie utilizzate per l'implementazione
sono sempre pi&ugrave; basate sull'object oriented e sull'integrazione di componenti,
ed &egrave; importante che anche le attivit&agrave; di progettazione siano basate sugli
stessi princ&igrave;pi. UML, essendo un linguaggio di modellazione basato
sull'approccio object oriented, risponde perfettamente ad entrambe queste
esigenze.</p>



<h2>Gli strumenti UML</h2>

<p>La spinta all'adozione di UML pu&ograve; quindi provenire
dall'esterno (allineamento alle richieste dei clienti, ad uno standard
internazionale), o dall'interno dell'organizzazione (miglioramento della
comunicazione, adozione di approcci di progettazione object-oriented). </p>



<p>In ogni caso, &egrave; probabile che chi intende utilizzare UML
decida di avvalersi di uno strumento di visual modeling, cio&egrave; di un software
commerciale per la produzione di modelli. Certo, i diagrammi UML si possono
disegnare anche con carta e matita; ma &egrave; sicuramente pi&ugrave; comodo, e forse pi&ugrave;
economico, utilizzare uno strumento software per crearli e gestirli.</p>

<p>Le soluzioni disponibili sono di due tipi: diagrammatori
puri (come Flowcharter o Visio), oppure strumenti dedicati alla produzione di
modelli UML.</p>



<p>I diagrammatori puri consentono di creare ogni genere di
diagramma, avvalendosi di mascherine (template), legate ad ambiti notazionali
specifici, e ne esistono alcuni capaci di rappresentare tutti i simboli grafici
di UML. Il limite di questo tipo di strumenti &egrave; che consentono appunto di
creare solo diagrammi, cio&egrave; rappresentazioni grafiche, ma non di documentare
gli aspetti semantici (il significato) degli elementi rappresentati, n&eacute; di
controllare la correttezza sintattica delle associazioni tra elementi. Nulla
vieta, ad esempio, di rappresentare graficamente una &quot;gerarchia di
aggregazione&quot; che leghi pi&ugrave; &quot;attivit&agrave;&quot; ad una
&quot;classe&quot;, anche se si tratta di un'associazione che UML non consente.
</p>


<p>Gli strumenti di visual modeling veri e propri, invece,
offrono una gestione completa dei modelli UML, sintattica e semantica, e non
solo la produzione di diagrammi. Consentono la generazione di codice a partire
dai modelli, ed il reverse engineering (riproduzione di modelli) a partire da
codice esistente.</p>

<p>Costituiscono i discendenti diretti degli strumenti CASE
(Computer Aided Software Engineering) che vissero un breve periodo di gloria
tra la fine degli '80 e l'inizio dei '90, come IEW/ADW, Bachman, Excelerator,
Teamwork, IEF. I primi CASE sparirono poi rapidamente dalle scene dello sviluppo,
in parte perch&eacute; legati al mondo mainframe (nel periodo in cui iniziavano a
diffondersi le architetture distribuite), ma anche a causa di un pessimo
rapporto tra i costi sostenuti per la loro adozione ed i benefici conseguiti
dal loro utilizzo.</p>



<p>UML ha rivitalizzato questo mercato in modo decisivo. Gli
strumenti di visual modeling UML (i produttori hanno preferito rinominarli in
questo modo, piuttosto che utilizzare l'ormai screditato acronimo CASE) si
stanno rapidamente diffondendo nelle organizzazioni. Hanno costi mediamente pi&ugrave;
ragionevoli dei loro predecessori, funzionano mediamente meglio, e sono sulla
cresta dell'onda. Uno dei segni pi&ugrave; evidenti del dinamismo del settore &egrave;
rappresentato dal rapido evolversi delle acquisizioni societarie da parte dei
suoi protagonisti.</p>



<p>Fino a pochi mesi fa, Sterling Software costituiva uno dei
maggiori protagonisti di questo specifico segmento di mercato, avendo
progressivamente acquisito i prodotti di KnowledgeWare (ADW), Bachman e Cadre
(ObjectTeam, sotto il marchio Cayenne), Texas Instruments Software
(IEF-Composer), ed avendoli integrati nella suite COOL, comprendente strumenti
che andavano dalla creazione di modelli di business fino alla generazione del
codice . Nel febbraio 2000, per&ograve;, Sterling &egrave; stata a sua volta acquisita da Computer Associates. 
CA si &egrave; portata in casa l'intera
suite COOL, con l'eccezione di COOL:Jex,
lo strumento di visual modeling UML, ceduto alla svedese Telelogic. 
COOL:Jex, infatti, avrebbe costituito una sovrapposizione nell'offerta di
CA, che comprende gi&agrave; un altro strumento UML, Paradigm Plus, frutto dell'acquisizione precedente di Platinum.</p>



<p>Anche Rational, la societ&agrave; degli autori
di UML (Booch, Rumbaugh e Jacobson), &egrave; stata protagonista di una serie ripetuta
di acquisizioni. Al suo prodotto principale, Rose, che costituisce il leader nel mercato dei tool UML, ha ultimamente
affiancato un Rose RealTime,
specializzato per la modellazione dei sistemi embedded, frutto
dell'incorporazione della canadese ObjecTime, avvenuta nel dicembre 1999 .</p>


<p>Tra gli altri prodotti protagonisti del mercato, vanno
segnalati Together, della TogetherSoft di Peter Coad, System Architect della Popkin, 
Select della Princeton
Softech, azienda del gruppo Computer Horizons, Rhapsody della I-Logix, 
 Software Through Pictures della Aonix, MagicDrawUML della No Magic. 
 Esistono inoltre alcuni
prodotti freeware (gratuiti), tra i quali ArgoUML .</p>



<h2>Una scelta da
valutare con attenzione</h2>

<p>Non esiste una scelta ottimale tra gli strumenti UML, valida
per tutti e in tutte le situazioni. Alcuni strumenti hanno il loro punto di
forza nella generazione di codice per alcuni linguaggi, altri nella
modellazione di sistemi Real-Time, altri nella completezza della loro
implementazione dello standard UML, altri ancora nel supporto al lavoro di
gruppo, o nella pubblicazione dei modelli in formato Html, oppure in un prezzo
inferiore alla media.</p>


<p>La scelta va effettuata sulla base delle esigenze specifiche
della singola organizzazione, e quindi ponderata sulla base di pi&ugrave; fattori.</p>

<p>In ogni caso, si tratta di una scelta da effettuare con
attenzione. Adottare uno strumento UML significa effettuare un investimento
significativo, e non solo in termini di costo di acquisto. </p>

<p>L'utilizzo dello strumento pu&ograve; influenzare in modo rilevante
le modalit&agrave; di lavoro degli sviluppatori, e comporta la necessit&agrave; di effettuare
formazione, di acquisire il supporto di consulenti esperti per guidare i primi
progetti, di definire, concordandole tra le diverse parti in causa, la
documentazione da produrre e l'iter di lavoro (il &quot;processo&quot;) da
seguire. A fronte di questi costi da sostenere, scegliere uno strumento
inadeguato pu&agrave; essere veramente rischioso, perch&eacute; pu&ograve; dare luogo a rifiuti, e precludere
i benefici attesi dall'investimento.</p>



<p>La scelta deve essere quindi effettuata come un
mini-progetto, e pu&ograve; essere basata sull'utilizzo di una griglia di valutazione,
che ho realizzato per il confronto di strumenti di visual modeling UML e viene
presentata nell'<a href="2000-11-GrigliaStrumentiUML.htm">articolo seguente</a>.</p>



<p>Innanzitutto si tratta di definire i requisiti che il
prodotto (ed il fornitore) dovr&agrave; soddisfare. Dovr&agrave; essere utilizzato per
sistemi informativi gestionali o per sistemi &quot;embedded&quot;? Quanto &egrave;
importante il supporto al lavoro di gruppo? Quanto &egrave; importante l'interazione
con strumenti per la gestione dei requisiti, o dei test? Si intende effettuare
la generazione del codice a partire dallo strumento? E per quali linguaggi?
Quali documenti e report si vuole che lo strumento produca? Quale supporto ci
si attende dal fornitore in termini di formazione, di consulenza? </p>

<p>In questa fase occorre inoltre definire gli eventuali
vincoli economici sul costo di acquisto, e temporali sulla durata del progetto
di valutazione. </p>

<p>Il risultato di questa prima attivit&agrave; pu&ograve; essere tradotto in
una personalizzazione della griglia di valutazione, ed in particolare nella
determinazione dei &quot;pesi&quot; da associare alle singole voci della
griglia, ossia dei fattori correttivi legati all'importanza relativa dei
diversi aspetti da valutare.</p>



<p>Il secondo passo &egrave; la selezione dei prodotti da valutare.
Dato il numero elevato delle possibili scelte, ed il costo di ogni singola
valutazione di prodotto, &egrave; opportuno effettuare una prima cernita, restringendo
il campo di indagine a tre - cinque prodotti al massimo. Questa prima selezione
pu&ograve; avvenire raccogliendo le informazioni dai siti Web dei produttori, oppure
ricorrendo a fonti indipendenti (letteratura, gruppi di discussione,
consulenza).</p>


<p>Scelti i prodotti da valutare, si tratta di scendere in
dettaglio. E' ovviamente importante contattare i produttori o distributori, per
richiedere informazioni di carattere sia tecnico che commerciale. Ma &egrave;
essenziale provare gli strumenti. Fortunatamente, tutti i prodotti UML sono
disponibili alla prova, per un periodo di tempo limitato, ed ottenibili tramite
download o facendone richiesta ai produttori. E' opportuno che i prodotti siano
utilizzati, allo scopo di effettuare la valutazione, su una medesima
applicazione gi&agrave; conosciuta in azienda, e che la prova sia effettuata da gruppi
di lavoro che conoscono bene UML (almeno a livello teorico), i linguaggi da
utilizzare per la generazione del codice ed il reverse engineering, e le
problematiche di lavoro di gruppo. I risultati delle prove, e le indicazioni
dei fornitori, consentono di attribuire un voto alle singole voci della griglia
di valutazione.</p>



<p>L'ultima attivit&agrave; da effettuare consiste nel calcolo dei
risultati, che avviene attraverso l'applicazione dei &quot;pesi&quot; ai voti
riportati da ciascun prodotto nelle voci della griglia di valutazione. Il
risultato &egrave; la scelta dello strumento pi&ugrave; adatta alle specifiche esigenze
dell'organizzazione.</p>



<h2>Introduzione in
azienda</h2>

<p>Scelto lo strumento UML, &egrave; necessario porre la dovuta
attenzione anche alla sua introduzione nel contesto operativo dell'azienda. In
troppi casi, infatti, gli investimenti effettuati non vengono poi sfruttati nel
modo ottimale, e gli strumenti acquisiti rischiano di diventare
&quot;shelfware&quot;, roba da scaffale.</p>



<p>Un primo aspetto da considerare &egrave; la velocit&agrave; della
diffusione. Si vuole procedere a spron battuto, fornendo subito il nuovo
strumento a tutti i gruppi di lavoro, oppure in modo graduale, iniziando con un
progetto pilota e diffondendo poi in modo incrementale il nuovo modo di
lavorare? </p>

<p>A parte gli aspetti economici dell'investimento, la
diffusione graduale &egrave; generalmente pi&ugrave; efficace e meno rischiosa. </p>



<p>Il progetto pilota, che deve essere un lavoro effettivamente
importante e non una simulazione (ma non dovrebbe neppure essere &quot;mission
critical&quot; per l'organizzazione, per i rischi legati all'introduzione di un
nuovo modo di lavorare), pu&ograve; fornire indicazioni importanti per l'adattamento
dello strumento alle specificit&agrave; dell'ambiente, e creare tra i partecipanti un
nucleo di competenze che potr&agrave; poi essere utilizzato nei progetti successivi. </p>

<p>Uno dei problemi principali legato all'adozione di uno
strumento di visual modeling sta infatti nella curva di apprendimento
necessaria allo sviluppatore, cio&egrave; nella diminuzione temporanea di produttivit&agrave;
legata all'acquisizione delle competenze sul prodotto. L'utilizzo degli
strumenti di visual modeling UML non &egrave; infatti quasi intuitivo come quello di
un word processor. </p>

<p>I concetti object-oriented e di sviluppo a componenti, che
possono essere appresi a livello teorico in un corso di formazione, richiedono
infatti una sperimentazione concreta per essere interiorizzati e applicati in
modo produttivo. Il progetto pilota consente ai partecipanti di consolidare e
approfondire le conoscenze, e va quindi effettuato con la guida di persone
esperte, per ridurre costi e
rischi e per velocizzare i tempi dell'apprendimento. I partecipanti al progetto
pilota potranno poi, a loro volta, svolgere un ruolo di tutor nei successivi
utilizzi nello strumento e delle tecniche in altri progetti.</p>



<p>Un secondo aspetto da considerare &egrave; l'adattamento dello
strumento allo specifico modo di lavorare dell'organizzazione in cui viene
calato. Gli strumenti di visual modeling possono essere utilizzati in modi
molto diversi, anche perch&eacute; UML &egrave;, in s&eacute;, decisamente complesso. Quali
documenti, quali diagrammi dovranno essere prodotti? In quale sequenza? Da chi?
E da chi dovranno essere validati o controllati? Si tratta di scelte non
banali, che possono influire in modo decisivo sul successo o meno
dell'investimento effettuato.</p>



<p>Andr&agrave; quindi definito un iter di lavoro per il progetto
pilota, che specifichi i documenti da produrre ed il loro contenuto, la
sequenza di attivit&agrave; da effettuare, le relative responsabilit&agrave; attribuite alle
figure professionali partecipanti, eventuali standard cui conformarsi.</p>

<p>L'iter di lavoro potr&agrave; essere pi&ugrave; o meno
&quot;leggero&quot;, in termini di documentazione da produrre e di verifiche da
effettuare, in funzione della cultura organizzativa dell'azienda, del settore
di business in cui opera, del tipo di attivit&agrave; progettuale. Settori &quot;life
critical&quot;, come ad esempio l'industria aerospaziale, militare, medica,
necessitano di un iter molto pi&ugrave; regolamentato e controllato di altri, nei
quali i rischi di una eventuale non aderenza ai requisiti di progetto hanno
impatti minori. Per il progetto pilota, in ogni caso, &egrave; opportuno che l'iter di
lavoro sia il pi&ugrave; leggero possibile: una enfasi eccessiva sugli aspetti
documentativi e di controllo pu&ograve; dare la sensazione che il nuovo modo di
lavorare sia troppo burocratico, con conseguente rifiuto da parte degli
sviluppatori.</p>



<p>L'iter di lavoro sperimentato, con gli opportuni
aggiustamenti derivanti dall'esperienza concreta del progetto pilota, potr&agrave;
costituire successivamente la base della procedura organizzativa (processo) per
lo sviluppo, replicabile nei progetti successivi.</p>

      <hr />
      <p><a href="../../articoli.htm">Elenco pubblicazioni</a>.</p>

	<hr />
	<p class="centered"><a href="../../index.html"> analisi-disegno.com </a>, servizi e materiali per lo sviluppo dei sistemi software, a cura di <a href="../../a_comai/adriano_comai.htm">Adriano 
  		Comai</a>. </p>  
</body>
</html>
