<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>Meccanismi di controllo nei progetti software - analisi-disegno.com</title>
<meta name="keywords" content="progetto, controllo, sal, avanzamento lavoro, sviluppo, software" />
<meta name="description" content="Meccanismi di controllo sull'avanzamento dei lavori nei progetti di sviluppo software." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
<meta name="author" content="Adriano Comai" />
<meta name="robots" content="noarchive" />
<link rel="stylesheet" type="text/css" href="../analisi-disegno.css" />
</head>

<body>
<p class="iniziale">analisi-disegno.com</p>
	<p class="menu"><a href="../">Homepage</a>&nbsp;| 
	<a href="../notiziario.html">Notiziario</a>&nbsp;| <a href="../welcome_e.html">In English</a></p>
    <hr />
	
      <h1>Meccanismi di controllo nei progetti software</h1>
      <p>I meccanismi di controllo per i progetti di sviluppo software sono di due tipi: controlli 
        sulla qualit&agrave; di quanto viene prodotto e controllo sull'avanzamento 
        dei lavori. Entrambi possono avvenire all'interno al gruppo di lavoro 
        oppure essere rivolti a fornire visibilit&agrave; esterna.</p>
      <hr />
      <h2>Controlli di qualit&agrave; interni al gruppo di progetto</h2>
      <p>Qualunque attivit&agrave; &quot;operativa&quot; (es. definizione dei requisiti e dei casi d'uso, progettazione dei componenti, 
        codifica, definizione e progettazione dei test) pu&ograve; produrre errori.</p>
      <p>I controlli possono essere pi&ugrave; o meno formalizzati, e la loro frequenza pu&ograve; dipendere 
        da vari fattori (criticit&agrave; intrinseca del progetto, esperienza 
        del gruppo di lavoro, relazioni tra ruoli, ecc.). Possono consistere, 
        a seconda del modello organizzativo, in &quot;ispezioni&quot; sugli avanzamenti 
        e sui prodotti effettuate dal capo progetto, o coinvolgere l'intero gruppo di lavoro.</p>
      <p>La tecnica pi&ugrave; efficace (oltre che meno costosa) per ridurre il numero e la gravit&agrave; degli 
        errori nelle attivit&agrave; operative &egrave; comunque semplice: confrontare 
        reciprocamente, all'interno del gruppo di lavoro, gli output prodotti 
        dai singoli partecipanti al progetto. Questa modalit&agrave; di controllo 
        interno pu&ograve; assumere due forme diverse:</p>
      <ul>
        <li>collaborazione tra persone che rivestono lo stesso ruolo (es. sviluppatore)</li>
        <li>collaborazione tra persone che rivestono ruoli complementari (es. analista e sviluppatore)</li>
      </ul>
      <p>Quanto pi&ugrave; queste forme di &quot;controllo interno&quot; sono effettuate in modo anticipato, tanto 
        pi&ugrave; sono efficaci.</p>
      <h2>Controlli di qualit&agrave; esterni</h2>
      <p>Il livello essenziale di controllo, 
        nell'ambito di sviluppo custom, &egrave; costituito dai collaudi di accettazione 
        da parte del cliente. Nei casi di progetti software meno semplici, oltre 
        a questo livello di controllo ne esiste un altro effettuato all'interno 
        dell'organizzazione che sviluppa il sistema, ma da parte di un'area separata, 
        nella forma di collaudo interno o comunque di independent testing.</p>
      <hr />
      <h2>Controlli sull'avanzamento lavori interni al gruppo di progetto</h2>
      <p>Devono fornire all'intero gruppo di lavoro la visibilit&agrave; su quanto sta accadendo, e la possibilit&agrave; 
        di contribuire a migliorare efficacia ed efficienza.</p>
      <p>Come per la maggioranza dei controlli avanzamento lavori, &egrave; opportuno che anche quelli interni 
        al gruppo di progetto avvengano con periodicit&agrave; predefinita. Lo 
        stato avanzamento lavori interno ideale &egrave; frequente e dura poco.</p>
      <p>Un modello efficace &egrave; 
        rappresentato dagli <a href="http://www.martinfowler.com/articles/itsNotJustStandingUp.html" target="_blank">stand-up 
        meeting</a> quotidiani previsti dai processi agili.</p>
      <p>Nell'ambito del progetto &egrave; essenziale anche il controllo sull'avanzamento dei costi, per il quale 
        &egrave; possibile ricorrere alla tecnica dell'Earned Value Management (sono disponibili 
        su web numerose fonti informative, tra cui <a href="http://evm.nasa.gov/" target="_blank">questa</a>), 
        che fornisce elementi utili per dare visibilit&agrave; sugli avanzamenti 
        anche all'esterno del progetto.</p>
      <p>Per aumentare al massimo la visibilit&agrave; sull'avanzamento 
        lavori all'interno del gruppo di progetto sono inoltre utili le burn chart. 
        Vedere ad esempio Alistair 
        Cockburn, <a href="http://alistair.cockburn.us/index.php/Earned-value_and_burn_charts" target="_blank">Earned-value 
        and burn charts</a>.</p>
      <hr />
      <h2>Stati avanzamento lavoro rivolti all'esterno (status report)</h2>
      <p>Hanno lo scopo di verificare, con periodicit&agrave; predefinita, l'avanzamento del progetto. Consistono 
        in riunioni alle quali possono partecipare, oltre al al gruppo di lavoro, 
        anche altri stakeholder (es. management, PMO, committente).</p>
      <p>Negli stati avanzamento lavoro formali vengono effettuate:</p>
      <ul>
        <li>la verifica sul raggiungimento degli obiettivi definiti per il periodo di lavoro (iterazione) precedente</li>
        <li>l'analisi dei rischi e delle criticit&agrave;</li>
        <li>la definizione degli obiettivi per il periodo di lavoro (iterazione) successivo</li>
      </ul>
      <p>Gli stati avanzamento lavoro sono momenti di sincronizzazione essenziali tra il gruppo di progetto 
        e gli altri stakeholder.</p>
      <blockquote><p>&#147;Non tutti i progetti necessitano di verifiche di 
        avanzamento mensili formali. Per questi tipi di progetti sono necessarie:</p>
      <ul>
        <li>progetti i cui costi totali di sviluppo sono rilevanti (&gt;$1,000,000)</li>
        <li>progetti i cui tempi totali di sviluppo superano 12 mesi di durata</li>
        <li>progetti con valore strategico importante per l&#146;azienda</li>
        <li>progetti in cui il rischio di dilazioni pu&ograve; essere troppo elevato (come i progetti militari)</li>
        <li>progetti molto importanti per i vertici aziendali</li>
        <li>progetti nell&#146;ambito di contratti con penali sul rispetto dei tempi</li>
        <li>progetti la cui data di rilascio &egrave; stata resa pubblica, o &egrave; comunque importante per l&#146;azienda</li>
      </ul>
      <p>Il tempo dedicato alle verifiche di avanzamento lavori 
        &egrave; uno dei migliori investimenti software possibili per un&#146;azienda.&#148; (Fonte: Capers Jones, Social and Technical Reasons for Software Project Failures, CrossTalk, June 2006)</p></blockquote>
      <hr />
      <h2>Verifiche alla conclusione di fasi progettuali</h2>
      <p>Nei <a href="../processo/processosvilupposw.htm">processi 
        di sviluppo software</a> che prevedono una suddivisione in fasi, la conclusione 
        delle singole fasi &egrave; un naturale momento di controllo in cui fornire 
        visibilit&agrave; sull'andamento e sui risultati ottenuti dal progetto.</p>
      <p>Nel caso di <a href="../processo/rup.htm">Unified Process</a> 
        e delle sue derivazioni, le conclusioni di fase costituiscono degli &quot;anchor 
        point&quot; essenziali per il controllo del progetto e la sincronizzazione 
        tra gli stakeholder:</p>
      <ul>
        <li>LCO (Life Cycle Objectives) &#150; fine Inception - consolidamento obiettivi progettuali</li>
        <li>LCA (Life Cycle Architecture) &#150; fine Elaboration - consolidamento architettura</li>
        <li>IOC (Initial Operational Capability) &#150; fine Construction - prodotto collaudato internamente</li>
      </ul>
      <p>Vedere anche Barry Boehm, &quot;<a href="http://sunset.usc.edu/publications/TECHRPTS/1998/usccse98-512/usccse98-512.pdf" target="_blank">Using 
        the WinWin Spiral Model: A Case Study</a>&#148;, in IEEE Computer, July 1998, pp. 33-44.</p>

      <hr />
      <p><a href="../processo/processosvilupposw.htm">Pagina principale sui processi di sviluppo software</a></p>

     <hr />
	<p class="centered"><a href="../"> analisi-disegno.com </a>, servizi e materiali per lo sviluppo dei sistemi software, a cura di <a href="../a_comai/adriano_comai.htm">Adriano 
  		Comai</a>. </p>
</body>

</html>
