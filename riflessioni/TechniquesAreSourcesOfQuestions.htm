<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>Software techniques are sources of questions - analisi-disegno.com</title>
<meta name="author" content="Adriano Comai" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
<meta name="keywords" content="technique, software, method, entity relationship, data flow diagram, use cases" />
<link rel="stylesheet" type="text/css" href="../analisi-disegno.css" />
</head>

<body>
	<p class="iniziale">analisi-disegno.com</p>
	<p class="menu"><a href="../">Homepage (in Italian)</a>&nbsp;| 
	<a href="../notiziario.html">News (in Italian)</a>&nbsp;| <a href="../welcome_e.html">In English</a></p>
    <hr />

      <h1>Software analysis techniques are sources of questions</h1>
      <p>The word "technique" 
        comes from ancient Greek: "t&eacute;chne" means art. Techniques are tools, 
        you can learn to use them at a theoretical level or by experience. Best, 
        if you can, both theoretically and practically.</p>
      <p>Analysis and design 
        techniques are sources of questions, useful to treat a problem and to 
        approach a solution.</p>
      <hr />
      <h2>Entity-Relationship</h2>
      <p>The Entity-Relationship technique, created for data 
        modeling, leans on some fundamental questions:</p>
      <ul>
        <li>which are the main concepts 
          of the application domain (i.e. of the problem) facing us? (in technical 
          jargon: which entities? which attributes?)</li>
        <li>which are the links among these concepts? (in technical 
          jargon: which relationships?)</li>
      </ul>
      <p>These are questions that the developer (or the analyst, 
        if this is a distinct role) makes to herself, when she faces a new problem. 
        In whatever application domain, from telecoms to military to financial 
        systems. These questions may be asked to problem experts (e.g. customer, 
        users) to clarify requirements. And these questions may be the starting 
        point for the construction of the domain model, the skeleton of the future 
        system.</p>
      <hr />
      <h2>Structured Analysis</h2>
      <p>The structured analysis technique, characterized by 
        the usage of Data Flow Diagrams or SADT diagrams, had its peak in the 
        eighties, now it is less used. But its fundamental questions are still 
        alive:</p>
      <ul>
        <li>which are the boundaries of the system? what is 
          included, what is excluded? with which external systems does our system 
          interact? (in technical jargon: which is the context?)</li>
        <li>given a process (or system), which are 
          its constituent parts? how are they related? (in technical jargon: how 
          can you decompose it?)</li>
      </ul>
      <p>Different questions from those of the Entity-Relationship 
        theory. But generally applicable, and very useful to make to oneself, 
        when facing a new problem. And a source of questions to the stakeholders, 
        to clarify requirements.</p>
      <hr />
      <h2>Use Cases</h2>
      <p>Use cases too, as an analysis 
        technique, are based upon some fundamental questions:</p>
      <ul>
        <li>who will use the system, 
          or will interact with it? (in technical jargon: who are the actors?)</li>
        <li>what has (each of the actors) 
          to do with the system? how will the actor use the system? (in technical 
          jargon: which are the use cases?)</li>
      </ul>
      <p>Again, these are different 
        questions from those of the previously named techniques. But generally 
        applicable, useful to clarify requirements and as a starting point for 
        the design of the system.</p>
      <hr />
      <h2>Object Oriented analysis and design</h2>
      <p>Object oriented analysis and 
        design retain and absorb some concept typical of structured approaches. 
        But there are new fundamental questions for system design:</p>
      <ul>
        <li>which are the responsibilities of the various system parts?</li>
        <li>how should the parts collaborate? 
          which is the best way to link them?</li>
        <li>how can I make the parts stable?</li>
      </ul>
      <hr />
      <p> Mastering the 
        techniques means having tools at our disposal, to use when we need them. 
        In software development, it means to become able to ask oneself the questions 
        needed to clarify requirements and to design the system.</p>
      <p>The most important thing is that these techniques are complementary, they do not exclude each other. Every new technique 
        entering our professional baggage enriches our ability to face new problems 
        in an effective way. In some situations, the new technique will be particularly 
        useful. In other situations less, and other techniques will be more adequate. 
        </p>
<hr />
		<p class="centered"><a href="../welcome_e.html">analisi-disegno.com</a>, services and documents for software development, by <a href="a_comai/adriano_comai_e.htm">Adriano 
  			Comai</a>.</p>
</body>
</html>