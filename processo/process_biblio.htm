<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>Bibliografia sul processo di sviluppo - analisi-disegno.com</title>
<meta name="keywords" content="bibliografia, processo, cascata, iterativo, agile, extreme programming, scrum, unified process, sviluppo, software" />
<meta name="description" content="Bibliografia sulle tipologie di processo di sviluppo software." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
<meta name="author" content="Adriano Comai" />
<meta name="robots" content="noarchive" />
<link rel="stylesheet" type="text/css" href="../analisi-disegno.css" />
</head>

<body>
<p class="iniziale">analisi-disegno.com</p>
	<p class="menu"><a href="../">Homepage</a>&nbsp;| 
	<a href="../notiziario.html">Notiziario</a>&nbsp;| <a href="../welcome_e.html">In English</a></p>
    <hr />
	
      <h1>Bibliografia sul processo di sviluppo software</h1>
      <h2>Alcuni classici</h2>
      <ul>
        <li>Frederick P.Brooks, Jr. 
          : <a href="http://www.amazon.com/exec/obidos/ASIN/0201835959/analisidisegnoco"><em>The 
          Mythical Man-Month. Essays on Software Engineering. Anniversary Edition</em></a> 
          , Addison Wesley 1995 (1a edizione 1975). Uno dei testi fondamentali 
          sulle ragioni dell'ingegneria del software. Attuale, come se fosse stato 
          scritto oggi.</li>
        <li>Tom De Marco, Timothy Lister 
          : <a href="http://www.amazon.com/exec/obidos/ASIN/0932633439/analisidisegnoco"><em>Peopleware: 
          Productive Projects and Teams</em></a> , 2nd Edition Dorset House 1999 
          (1a edizione 1987). Sugli aspetti sociologici dello sviluppo software. 
          </li>
        <li>Gerard Weinberg : <em><a href="http://www.amazon.com/exec/obidos/ASIN/0932633420/analisidisegnoco">The 
          Psychology of Computer Programming. Anniversary Edition</a></em> , Dorset 
          House 1998 (1a edizione 1969). Il primo testo (a mia conoscenza) che 
          abbia affrontato gli aspetti non tecnici dello sviluppo. Gli esempi 
          sono ovviamente comprensibili appieno solo da chi ha esperienza delle 
          tecnologie in vigore quando &egrave; stato scritto, ma la sostanza delle 
          tematiche affrontate &egrave; ancora valida.</li>
      </ul>
      <h2>Riferimenti attuali di carattere generale</h2>
      <ul>
        <li>Philip G. Armour: <a href="http://www.amazon.com/exec/obidos/ASIN/0849314895/analisidisegnoco"><em>The 
          Laws of Software Process. A New Model for the Production and Management 
          of Software</em></a>, Auerbach 2004. L'essenza dello sviluppo software 
          consiste nell'acquisizione di conoscenza. Il software non &egrave; un 
          &quot;prodotto&quot;, ma un &quot;medium&quot; per registrare conoscenza 
          eseguibile. Da leggere.</li>
        <li>James Coplien, Neil Harrison: 
          <a href="http://www.amazon.com/exec/obidos/ASIN/0131467409/analisidisegnoco"><em>Organizational 
          Patterns of Agile Software Development</em></a>, Prentice-Hall 2005. 
          Il titolo purtroppo &egrave; fuorviante. Non si parla in specifico dei 
          processi agili, ma dei pro e dei contro delle diverse modalit&agrave; 
          di organizzare lo sviluppo software. Lo ritengo un testo essenziale 
          ed immediatamente utilizzabile per chiunque si occupi di aspetti organizzativi 
          inerenti il software, a qualsiasi livello (anche per chi si chiede quale 
          sia il modo migliore per organizzare un singolo gruppo di progetto.</li>
        <li>Pete McBreen: <em><a href="http://www.amazon.com/exec/obidos/ASIN/0201733862/analisidisegnoco">Software 
          Craftmanship. The New Imperative</a></em> , Addison-Wesley 2001 - Discutibile, 
          e stimolante. Le ragioni dell'esperienza, e della trasmissione dell'esperienza 
          da maestro e allievo, nello sviluppo software.</li>
        <li>Scott Adams : <a href="http://www.unitedfeatures.com/?title=Bio:Dilbert%20Dailies"><em>The 
          Dilbert Zone</em></a> . Per chi non lo conoscesse ancora, il protagonista 
          (progettista software) di uno dei fumetti pi&ugrave; letti nel mondo. Resistenza 
          umana nell'ambiente di lavoro</li>
      </ul>
      <h2>Sui processi agili e iterativi</h2>
      <ul>
        <li>Alistair Cockburn : <em><a href="http://www.amazon.com/exec/obidos/ASIN/0201699699/analisidisegnoco">Agile 
          Software Development</a> </em> - Addison-Wesley 2001 - Una presentazione 
          molto efficace delle ragioni e delle caratteristiche dei processi agili.</li>
        <li>Barry Boehm, Richard Turner: 
          <em><a href="http://www.amazon.com/exec/obidos/tg/detail/-/0321186125/analisidisegnoco">Balancing 
          Agility and Discipline. A guide for the Perplexed</a></em> , Addison-Wesley 
          2003 - Una presentazione dei vantaggi e dei limiti dei processi 
          agili.</li>
        <li>Craig Larman: <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0131111558/analisidisegnoco">A<em>gile 
          and Iterative Development. A Manager's Guide</em></a> , Addison-Wesley 
          2004 - Presentazione &quot;executive&quot; e ricca di dati sul perch&eacute; 
          i processi iterativi siano pi&ugrave; efficaci di quelli sequenziali, 
          e di quanto spesso i progetti condotti in modo sequenziale falliscano.</li>
      </ul>
      <h2>Unified Process - RUP</h2>
      <ul>
        <li>Ivar Jacobson,&nbsp;Grady 
          Booch, James Rumbaugh: <em><a href="http://www.amazon.com/exec/obidos/ASIN/0201571692/analisidisegnoco">Unified 
          Software Development Process</a> </em>, Addison-Wesley 1999 - Una introduzione 
          al processo scritta dagli autori di UML (nello specifico, da Jacobson). 
          Lo cito solo per completezza, ma &egrave; meglio affidarsi ai testi 
          successivi.</li>
        <li>Philippe Kruchten : <em><a href="http://www.amazon.com/exec/obidos/tg/detail/-/0321197704/3analisidisegnoco">The 
          Rational Unified Process. An Introduction. 3rd Edition.</a></em> , Addison-Wesley 
          2003 - Una presentazione sintetica ed efficace di RUP, disponibile anche 
          in traduzione italiana, con lo stesso titolo, in una edizione precedente 
          (2000). Il testo fondamentale per un primo approccio.</li>
        <li>Per Kroll, Philippe Krutchen: 
          <a href="http://www.amazon.com/exec/obidos/ASIN/0321166094/analisidisegnoco"><em>The 
          Rational Unified Process Made Easy. A Practitioner's Guide to the RUP</em></a> 
          , Addison-Wesley 2003 - Il testo migliore e pi&ugrave; approfondito 
          per capire RUP.</li>
        <li>Walker Royce : <em><a href="http://www.amazon.com/exec/obidos/ASIN/0201309580/analisidisegnoco">Software 
          Project Management. A Unified Framework</a></em>, Addison-Wesley 1998 
          - Per approfondire gli aspetti di RUP di rilevanza manageriale.</li>
      </ul>
      <h2>eXtreme Programming</h2> 
      <ul>
        <li>Kent Beck, Cynthia Andres: 
          <em><a href="http://www.amazon.com/exec/obidos/ASIN/0321278658/analisidisegnoco">Extreme 
          Programming Explained. Embrace Change</a></em>, 2nd Edition Addison 
          Wesley 2005 - Il testo pi&ugrave; chiaro per comprendere le ragioni 
          e le specificit&agrave; di extreme programming.</li>
        <li>Kent Beck, Martin Fowler 
          : <em><a href="http://www.amazon.com/exec/obidos/ASIN/0201710919/analisidisegnoco">Planning 
          Extreme Programming</a></em> , Addison-Wesley 2000 - Dedicato agli aspetti 
          di pianificazione del lavoro e di rapporto con il committente, ma da 
          leggere solo dopo il precedente.</li>
      </ul>
      <h2>Scrum</h2> 
      <ul>
        <li>Ken Schwaber, Mike Beedle: 
          <em><a href="http://www.amazon.com/exec/obidos/ASIN/0130676349/analisidisegnoco">Agile 
          Software Development with Scrum</a></em>, Addison Wesley 2001 - Il testo 
          di riferimento per Scrum.</li>
      </ul>
      <h2>Altri testi importanti</h2>
      <ul>
        <li>Barry W. Boehm: "<a href="http://sunset.usc.edu/csse_test/TECHRPTS/1989/usccse1989-500/usccse1989-500.pdf" target="_blank">Theory-W 
        Software Project Management: Principles and Examples</a>", che introduce nel mondo dello sviluppo software la logica "Win-Win" - Make Everyone a Winner - nata per la gestione e risoluzione dei conflitti.</li>
		<li>Barry W. Boehm e altri : 
          <em><a href="http://www.amazon.com/exec/obidos/ASIN/0130266922/analisidisegnoco">Software 
          Cost Estimation with CoCoMo II</a></em>, Prentice Hall 2000 - Il metodo 
          pi&ugrave; significativo per la stima dei costi progettuali, nella versione 
          aggiornata dopo quasi vent'anni.</li>
        <li>Carnegie Mellon University, 
          Software Engineering Institute : <em><a href="http://www.amazon.com/exec/obidos/ASIN/0201546647/analisidisegnoco">The 
          Capability Maturity Model. Guidelines for Improving the Software Process</a></em> 
          , Addison-Wesley 1994 - Il testo di riferimento per il Capability Maturity 
          Model del SEI.</li>
      </ul>
      <hr /> 
        <p><a href="processosvilupposw.htm">Pagina principale sui processi di sviluppo software</a></p>

     <hr />
	<p class="centered"><a href="../"> analisi-disegno.com </a>, servizi e materiali per lo sviluppo dei sistemi software, a cura di <a href="../a_comai/adriano_comai.htm">Adriano 
  		Comai</a>. </p>
</body>

</html>
