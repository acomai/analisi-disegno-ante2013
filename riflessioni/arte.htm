<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>lo sviluppo del software: arte, scienza, ingegneria ? - analisi-disegno.com</title>
<meta name="keywords" content="sviluppo software, arte, ingegneria" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
<link rel="stylesheet" type="text/css" href="../analisi-disegno.css" />
</head>

<body>

<p class="iniziale">analisi-disegno.com</p>
	<p class="menu"><a href="../">Homepage</a>&nbsp;| 
	<a href="../notiziario.html">Notiziario</a>&nbsp;| <a href="../welcome_e.html">In English</a></p>
    <hr />
	
      <h1>Lo sviluppo del software: arte, scienza, ingegneria?</h1>
      <h2>Una disciplina immatura</h2>
      <p>Lo sviluppo di sistemi software 
        &egrave; una disciplina giovane, con poco pi&ugrave; di 50 anni di storia alle 
        spalle.</p>
      <p>Gli sviluppatori hanno seguito 
        percorsi formativi eterogenei, sia come livello che come tipologia di 
        studi, e forse in misura ancora maggiore in termini di tirocinio e di 
        esperienze lavorative. Non esiste alcun consenso sul tipo di formazione 
        necessario per intraprendere la professione. Si sta pensando, un po' in 
        tutto il mondo, a certificazioni che abilitino all'esercizio della professione, 
        ma la diffusione di tali certificazioni non &egrave; dietro l'angolo.</p>
      <p>Lo sviluppo del software &egrave; 
        anche un&#146;industria, in cui lavorano milioni di persone in tutto il 
        mondo, che ha un impatto sempre crescente su tutti gli altri settori economici, 
        che sta contribuendo in modo decisivo a trasformare le modalit&agrave; di produzione, 
        di distribuzione e di comunicazione, e che influenza in modo rilevante 
        la vita di tutti.</p>
      
      <h2>La ricerca di un'identit&agrave;</h2>
      <p>Gli sviluppatori software hanno 
        difficolt&agrave; a spiegare ai non addetti ai lavori in che cosa consista effettivamente 
        il loro mestiere. Ed hanno problemi ad autodefinirsi, cosa che cercano 
        di fare prendendo a prestito da altre discipline pi&ugrave; &quot;consolidate&quot; 
        i termini con i quali parlare della propria attivit&agrave;. Ecco un elenco di 
        locuzioni utilizzate frequentemente:</p> 
      <ul>
        <li>software engineer, engineering</li>
        <li>software architect, architecture</li>
        <li>software designer, design</li>
        <li>software factory</li>
      </ul>
      <h2>Art &amp; Craft</h2>
      <p>Da un certo punto di vista, 
        lo sviluppo del software &egrave; un'arte. Come dicevano i greci, una T&eacute;chne. 
        I greci antichi non distinguevano tra arte e tecnica: per loro erano esattamente 
        la stessa cosa. Falegnami, vasai, tintori, pittori, sarti, medici, architetti: 
        tutti artisti / tecnici, nel senso che per fare il loro mestiere era (&egrave;) necessaria la padronanza di tecniche specifiche. E la tecnologia, nel 
        significato originario, &egrave; il discorso - l&ograve;gos - sulla t&eacute;chne.</p>
      <p>Certo, utilizzando una terminologia 
        moderna, pi&ugrave; che un artista (&quot;artist&quot;), lo sviluppatore software 
        pu&ograve; essere considerato un artigiano (&quot;craftsman&quot;). E porre in 
        risalto l'aspetto &quot;artigianale&quot; del lavoro evidenzia una caratteristica 
        importante dello sviluppo software, cio&egrave; il ruolo decisivo giocato dalle 
        capacit&agrave; individuali: numerosi studi empirici hanno dimostrato come esistano 
        notevoli differenze tra i singoli sviluppatori in termini di produttivit&agrave; 
        (e di qualit&agrave; del lavoro), anche a parit&agrave; di livello di esperienza. Gli 
        studi pi&ugrave; cauti parlano di differenze nell'ordine di 10 a 1.</p>
      <h2>Una scienza? </h2>
      <p>Purtroppo no, se intendiamo 
        per scienza le cosiddette &quot;scienze esatte&quot;. Di &quot;scientifico&quot;, 
        nel settore dello sviluppo software (a differenza dalla computer science) 
        esiste poco, a parte alcune tecniche a base matematica, come ad esempio 
        la <a href="../dbdesign/normalizzazione.pdf">normalizzazione</a> dei dati.</p>
      <p>Se invece utilizziamo una accezione 
        pi&ugrave; comprensiva di scienza, che comprenda anche le cosiddette &quot;scienze 
        umane&quot;, il discorso cambia.</p>
      <h2>Software Engineering</h2>
      <p>Dal punto di vista dei committenti 
        e dei responsabili di progetto, la visione dello sviluppo software come 
        un'attivit&agrave; artigianale, i cui risultati dipendono fortemente dall'estro 
        e dalle capacit&agrave; individuali dei singoli progettisti, &egrave; preoccupante e 
        spesso intollerabile.</p>
      <p>Dall'Organizzazione Internazionale 
        per la Standardizzazione (<a href="http://www.iso.ch" target="_blank">ISO</a>), 
        al Software Engineering Institute (<a href="http://www.sei.cmu.edu" target="_blank">SEI</a>), 
        sponsorizzato dal governo americano e dalle maggiori aziende statunitensi, 
        dai progetti finanziati dalla Comunit&agrave; Europea all'attivit&agrave; delle diverse 
        associazioni professionali e di categoria, sia internazionali che locali, 
        &egrave; in atto da decenni un lavoro enorme di definizione di standard e di 
        strategie per far raggiungere all'industria del software un livello di 
        maturit&agrave; accettabile.</p>
      <p>Parlare di ingegneria del software 
        non significa necessariamente negare il ruolo giocato dalle capacit&agrave; individuali, 
        perseguire un obiettivo di &quot;massificazione&quot; degli sviluppatori 
        software: ci sono stati tentativi in questa direzione, 
        ma sono falliti, come dimostrano gli sforzi delle maggiori societ&agrave; di 
        software mondiale per reclutare i progettisti migliori, a qualunque costo.</p>
      <p>L'ingegneria del software, 
        piuttosto, affronta le problematiche di tipo manageriale, organizzativo 
        e metodologico, per permettere che il lavoro degli sviluppatori possa 
        essere condotto con la maggiore efficacia, avvalendosi di tecniche e modi 
        di procedere sperimentati in contesti eterogenei, risolvendo i problemi 
        (soprattutto di comunicazione) legati al fatto che lo sviluppo di sistemi 
        software &egrave; un'attivit&agrave; intellettuale complessa, e che coinvolge una pluralit&agrave; 
        di soggetti diversi tra loro.</p>
      <h2>Aspetti sociali e di comunicazione</h2>
      <p>Lo sviluppo di software &egrave; 
        un'attivit&agrave; intellettuale complessa, ed &egrave; un'attivit&agrave; 
        sociale, nella quale le dinamiche di relazione tra i diversi soggetti 
        giocano un ruolo preponderante.</p>
      <p>La comunicazione tra committenti 
        (chi commissiona lo sviluppo), altre parti interessate (&quot;stakeholders&quot;, 
        tra cui gli utilizzatori) e gruppo di progetto. E' ovviamente decisiva 
        per il successo di un progetto, ed ha aspetti di natura negoziale e contrattuale, 
        ma non solo:</p>
      <ul>
        <li>La gestione dei <a href="../requisiti/requisiti.htm">requisiti</a> 
          (capire cosa bisogna fare, raggiungere un accordo sulla soluzione, mantenere 
          l'accordo fino alla fine del progetto anche alla luce degli inevitabili 
          cambiamenti) &egrave; un processo basato sul dialogo tra le parti, e 
          sulla progressiva messa a fuoco delle esigenze, dei vincoli, delle opportunit&agrave;, 
          delle scelte.</li>
        <li>Nel corso dell'intero progetto, 
          la presentazione dei risultati intermedi (semilavorati, prototipi) da 
          parte del gruppo di progetto, ed i riscontri da parte dei committenti 
          e delle altre parti interessate, costituiscono una pratica fondamentale 
          per la riduzione dei rischi di insuccesso.</li>
      </ul>
      <p>Anche la comunicazione interna 
        al gruppo di progetto gioca un ruolo fondamentale. Salvo i casi pi&ugrave; 
        elementari (un solo sviluppatore), comporta il coordinamento delle attivit&agrave; 
        di diverse persone, che in molti casi rivestono ruoli diversi. In alcune 
        situazioni, allo stesso gruppo di progetto prendono parte persone appartenenti 
        a settori diversi della medesima organizzazione. In altre, i partecipanti 
        al progetto sono persone appartenenti ad organizzazioni diverse, che cooperano 
        su basi definite tipicamente a livello contrattuale.</p>
      <p>La divisione del lavoro interna 
        al progetto (i ruoli e le appartenenze, ed il loro attuarsi nell'ambito 
        di uno specifico <a href="../processo/processosvilupposw.htm">processo di 
        sviluppo</a>), e la stessa organizzazione &quot;fisica&quot; del lavoro 
        (il fatto che tutti i partecipanti al progetto operino nel medesimo luogo, 
        oppure in luoghi diversi) sono fattori che possono influenzare in modo 
        generale il successo del progetto stesso, ed in particolare i livelli 
        di produttivit&agrave; e qualit&agrave;.</p>
		  
	<hr />
	<p class="centered"><a href="../"> analisi-disegno.com </a>, servizi e materiali per lo sviluppo dei sistemi software, a cura di <a href="../a_comai/adriano_comai.htm">Adriano 
  		Comai</a>. </p>  
</body>
</html>
