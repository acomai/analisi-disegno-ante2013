<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>Committente progetto software - consigli - analisi-disegno.com</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
<meta name="keywords" content="committente, software, progetto, contratto, fornitore" />
<link rel="stylesheet" type="text/css" href="../analisi-disegno.css" />
</head>

<body>

<p class="iniziale">analisi-disegno.com</p>
	<p class="menu"><a href="../">Homepage</a>&nbsp;| 
	<a href="../notiziario.html">Notiziario</a>&nbsp;| <a href="../welcome_e.html">In English</a></p>
    <hr />
	
      <h1>Come 
        sopravvivere a un progetto software - alcuni consigli per i committenti</h1>
      <p align="left"><font face="Arial, Helvetica, sans-serif">Un paradosso: 
        Il committente &egrave; il principale decisore dei progetti di sviluppo 
        software, ma non esiste una formazione per diventare committente: la strada 
        pi&ugrave; comune &egrave; quella di imparare dai propri sbagli.<br>
        Questo scritto, intenzionalmente sintetico, si propone di fornire alcune 
        indicazioni per aiutare i committenti a non farsi travolgere dai progetti.</font></p>
      <p><font face="Arial, Helvetica, sans-serif">Ma prima di tutto, cosa &egrave; 
        un committente? &#147;Chi ordina un lavoro, una prestazione, o si impegna 
        ad acquistare una merce per conto proprio&#148; secondo G. Devoto, G.C. 
        Oli - Dizionario della lingua italiana &#150; editrice Le Monnier. Il 
        termine deriva dal latino committens, &#145;colui che affida&#146;. <br>
        In generale, il committente &egrave; la figura disposta a sostenere i 
        costi per il progetto, e che ha la responsabilit&agrave; di valutare se 
        il prodotto risultante &egrave; accettabile. E' il principale decisore 
        del progetto, ed il suo ruolo deve essere noto ed accettato da tutte le 
        parti interessate all'andamento ed agli esiti del progetto (gli &quot;stakeholder&quot;).</font></p>
      <p><font face="Arial, Helvetica, sans-serif">Tra le responsabilit&agrave; 
        tipiche di un committente troviamo:</font></p>
      <ul>
        <li><font face="Arial, Helvetica, sans-serif">partecipare in modo attivo 
          al progetto </font></li>
        <li><font face="Arial, Helvetica, sans-serif">coinvolgere nel progetto 
          le altre parti interessate </font></li>
        <li><font face="Arial, Helvetica, sans-serif">esprimere requisiti, e chiarimenti 
          sui requisiti </font></li>
        <li><font face="Arial, Helvetica, sans-serif">definire le priorit&agrave; 
          sui requisiti</font></li>
        <li><font face="Arial, Helvetica, sans-serif">controllare l&#146;avanzamento 
          dei lavori, ed i prodotti / servizi che costituiscono il risultato del 
          progetto </font></li>
        <li><font face="Arial, Helvetica, sans-serif">gestire i rischi di progetto 
          </font></li>
        <li><font face="Arial, Helvetica, sans-serif">prendere decisioni in caso 
          di conflitto (ad esempio, di contrasto tra i punti di vista dei vari 
          stakeholder), o di incongruenza tra risorse e obiettivi (ad esempio, 
          in caso di ritardi nello sviluppo non rimediabili, il committente deve 
          decidere se &egrave; meglio rispettare una data di rilascio prevista 
          rimandando lo sviluppo di alcune funzionalit&agrave; oppure se completare 
          tutte le funzionalit&agrave; rimandando il rilascio).</font></li>
      </ul>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif"><b>Suggerimenti</b>:</font></p>
      <p><font face="Arial, Helvetica, sans-serif">1 - Non lasciarsi intimorire 
        dall'ignoranza sugli aspetti tecnici. Dal punto di vista linguistico, 
        alcuni sviluppatori usano abitualmente espressioni gergali, che possono 
        rendere pi&ugrave; difficile la comunicazione. E' un loro problema, ma 
        voi potete pretendere che si esprimano in modo comprensibile.</font></p>
      <p><font face="Arial, Helvetica, sans-serif">Dal punto di vista sostanziale, 
        non &egrave; affatto necessario che il committente debba accettare dilazioni 
        o maggiorazione di costi o soluzioni non ottimali a fronte di inesplicabili 
        motivazioni tecniche.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">2 - Evitare progetti di lunga 
        durata. I rischi di fallimento dei progetti sono direttamente proporzionali 
        alla durata, secondo tutte le statistiche. Se il prodotto da realizzare 
        &egrave; complesso, meglio (meno rischioso, meno costoso) segmentare il 
        lavoro in una serie successiva di progetti (il primo realizzer&agrave; 
        una parte iniziale del prodotto, i successivi le parti restanti). La durata 
        di ogni progetto deve essere comunque inferiore ad un anno, anche meno.</font></p>
      <p><font face="Arial, Helvetica, sans-serif">All'inizio, ogni progetto ha 
        un cono d'ombra provocato dalla mancanza di conoscenza, dalla indeterminatezza, 
        che va progressivamente rischiarato. La natura dello sviluppo software 
        consiste nella progressiva acquisizione di conoscenza su un problema concreto 
        (l'ambito applicativo, ad esempio bancario o medico), e nella trasposizione 
        di questa conoscenza, tramite processi di astrazione, in un sistema informatico. 
        </font></p>
      <p><font face="Arial, Helvetica, sans-serif">Il chiarimento, cio&egrave; 
        l'acquisizione di conoscenza, avviene tramite la collaborazione sistematica 
        tra il committente che vuole il sistema e lo sviluppatore che lo deve 
        realizzare. Nella maggioranza dei casi, n&eacute; il problema n&eacute; 
        le soluzioni sono perfettamente definiti all'inizio dello sviluppo: vengono 
        determinati progressivamente nel corso del progetto.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">3 - Decidere le priorit&agrave; 
        di sviluppo sulla base delle motivazioni di business, non di motivazioni 
        &quot;tecniche&quot;. E' il fornitore che si deve adattare alle esigenze 
        del committente, non viceversa.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">4 - Se possibile, scegliere 
        il fornitore, non farselo imporre. Le differenze di qualit&agrave; e produttivit&agrave; 
        nel campo dello sviluppo software sono enormi, e la breve storia dello 
        sviluppo &egrave; piena di relazioni contrastate e improduttive tra cliente 
        e fornitore . In ogni caso, sia che la scelta del fornitore sia libera 
        oppure obbligata, &egrave; indispensabile che il committente stabilisca 
        le proprie condizioni per il progetto (come quelle contenute in questo 
        elenco), e imposti il contratto in modo da non vincolarsi al fornitore 
        senza possibilit&agrave; di uscita.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">5 - Pretendere al pi&ugrave; 
        presto software funzionante, non solo documenti. Alcune societ&agrave; 
        di software sono abituate a lavorare con lunghi periodi iniziali (mesi 
        e mesi) di analisi, durante i quali vengono prodotti solo documenti e 
        non software concreto da far vedere al committente. In questo lungo periodo 
        iniziale, il fornitore richiede al committente di chiarire tutti i requisiti 
        prima di mettersi a progettare e realizzare il software. E' un approccio 
        inefficace ed inefficiente, perch&eacute; i requisiti si chiariscono molto 
        pi&ugrave; facilmente e pi&ugrave; velocemente quando committente ed utilizzatori 
        hanno a disposizione una versione iniziale del sistema. </font></p>
      <p><font face="Arial, Helvetica, sans-serif">L'eventuale richiesta del fornitore 
        di chiarire tutti i requisiti in anticipo, quando il prodotto software 
        esiste solo allo stato di idea, aumenta notevolmente i rischi di incomprensione 
        reciproca, in quanto pone il committente nella scomoda situazione di dover 
        prendere delle decisioni senza avere ancora tutti gli elementi per farlo. 
        E' un sintomo di scarsa professionalit&agrave; da parte del fornitore, 
        ed &egrave; opportuno che il committente rifiuti questo modo di lavorare. 
        Il committente non deve impegnare le proprie decisioni troppo a lungo 
        senza ottenere riscontri concreti da verificare.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">6 - Pretendere dal fornitore 
        verifiche periodiche frequenti, comunque non superiori al mese, in cui 
        vengano dimostrati concretamente gli avanzamenti del progetto (non accettare 
        dichiarazioni di avanzamento a percentuale: &quot;&egrave; pronto al 90%&quot; 
        significa semplicemente che il prodotto non &egrave; pronto). In ogni 
        verifica periodica va verificato e concordato il piano dei lavori fino 
        al termine del progetto.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">7 - </font><font face="Arial, Helvetica, sans-serif">Evitare, 
        se possibile, contratti &quot;a corpo&quot; (a prezzo fisso) stipulati 
        troppo presto, troppo precoci. Se si &egrave; obbligati a fissare il prezzo 
        subito all'inizio del progetto, meglio stipulare una serie successiva 
        di contratti, in modo da tenere conto dell'acquisizione progressiva delle 
        conoscenze in corso d'opera. Ad esempio, un contratto iniziale per uno 
        studio di fattibilit&agrave;, uno successivo per una prima versione &quot;iniziale&quot; 
        del sistema, altri successivi per le evoluzioni.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">8 - </font><font face="Arial, Helvetica, sans-serif">Se 
        non si ha tempo per seguire direttamente il progetto, delegare quante 
        attivit&agrave; operative sia possibile a qualcun altro che abbia tempo 
        e capacit&agrave; adeguate, o a un esperto di cui ci si possa fidare. 
        La partecipazione sistematica del committente (che &egrave; il principale 
        decisore del progetto) o di suoi rappresentanti &egrave; una condizione 
        necessaria per il successo del progetto.</font></p>
      <p>&nbsp;</p>
      <p><font face="Arial, Helvetica, sans-serif">9 - </font><font face="Arial, Helvetica, sans-serif">Identificare 
        tutti i potenziali stakeholder (le parti in causa), e coinvolgerli nel 
        progetto. Gestire in modo trasparente priorit&agrave; e conflitti tra 
        i punti di vista degli stakeholder. In caso di necessit&agrave; di scelta 
        tra diverse possibili soluzioni, l'ultima decisione spetta comunque al 
        committente.</font></p>
      <p>&nbsp;</p>
      <p>10 - Produrre 
        e aggiornare sistematicamente un proprio elenco dei rischi di progetto, 
        e richiedere al fornitore un elenco sempre aggiornato dei suoi rischi 
        &quot;tecnici&quot;. Individuare i fattori di rischio che possono compromettere 
        il successo del progetto (e mantenere un controllo costante sulla loro 
        evoluzione nel tempo) &egrave; una condizione necessaria per non farsene 
        travolgere.</p>
		  
	<hr />
	<p class="centered"><a href="../"> analisi-disegno.com </a>, servizi e materiali per lo sviluppo dei sistemi software, a cura di <a href="../a_comai/adriano_comai.htm">Adriano 
  		Comai</a>. </p>  
</body>
</html>
