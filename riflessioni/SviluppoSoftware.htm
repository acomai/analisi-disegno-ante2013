<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>lo sviluppo software &egrave; design e comunicazione - analisi-disegno.com</title>
<meta name="keywords" content="sviluppo software, design, comunicazione" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
<link rel="stylesheet" type="text/css" href="../analisi-disegno.css" />
</head>

<body>

<p class="iniziale">analisi-disegno.com</p>
	<p class="menu"><a href="../">Homepage</a>&nbsp;| 
	<a href="../notiziario.html">Notiziario</a>&nbsp;| <a href="../welcome_e.html">In English</a></p>
    <hr />
	
      <h1>Lo sviluppo software &egrave; design e comunicazione</h1>
      <p ALIGN="left"><font face="Arial, Helvetica, sans-serif">Lo sviluppo software 
        &egrave; un lavoro difficile da spiegare a chi non lo pratica in prima 
        persona. D'altra parte, &egrave; un lavoro diffuso (gli sviluppatori sono 
        molti) e con effetti rilevanti su chi fa altri mestieri (tutti sono in 
        qualche modo toccati dal software). Quindi vale la pena cercare di spiegare 
        in cosa consiste, anche per sfatare due luoghi comuni molto diffusi:</font></p>
      <p ALIGN="left"><font face="Arial, Helvetica, sans-serif">Luogo comune 1: 
        che lo sviluppo software sia analogo, o comunque riconducibile alla produzione 
        industriale (o all'edilizia)</font></p>
      <p ALIGN="left"><font face="Arial, Helvetica, sans-serif">Luogo comune 2: 
        che lo sviluppo software sia un'attivit&agrave; particolarmente adatta 
        alle persone meno socievoli, restie a lavorare insieme ad altri.</font></p>
      <p ALIGN="left"><font face="Arial, Helvetica, sans-serif">Si tratta di luoghi 
        comuni paradossali, per chi pratica lo sviluppo software come lavoro. 
        Ma pervasivi, e purtroppo diffusi anche tra i manager degli sviluppatori, 
        a volte con effetti disastrosi in termini di scelte organizzative, nonch&eacute; 
        di selezione e formazione del personale.</font></p>
      <h2>Un lavoro intellettuale complesso </h2>
      <p><font face="Arial, Helvetica, sans-serif">Lo sviluppo software &egrave; un lavoro 
        intellettuale complesso, in cui gli aspetti sociali (gestione delle relazioni, 
        e delle comunicazioni) sono preponderanti rispetto a quelli tecnologici.</font></p>
      <p> <font face="Arial, Helvetica, sans-serif">La natura dello sviluppo software 
        consiste nell'acquisizione di conoscenza su un problema concreto (l'ambito 
        applicativo, che pu&ograve; essere relativo ai settori pi&ugrave; diversi, 
        dal bancario all'automobilistico, dal campo medico a quello militare), 
        e nella trasposizione di questa conoscenza, tramite opportuni processi 
        di astrazione, in un sistema informatico [1].</font></p>
      <p><font face="Arial, Helvetica, sans-serif">La complessit&agrave; dello 
        sviluppo software deriva da tre cause principali:</font> </p>
      <ul>
        <li><font face="Arial, Helvetica, sans-serif">Il problema da risolvere 
          pu&ograve; essere complesso in s&egrave;, per il numero di concetti 
          coinvolti, per la complessit&agrave; delle loro caratteristiche e delle 
          loro interrelazioni.</font></li>
        <li><font face="Arial, Helvetica, sans-serif">La definizione del problema 
          e delle soluzioni avviene socialmente, tramite il dialogo tra chi vuole 
          il sistema (committente) e chi lo deve realizzare (sviluppatore). Nella 
          maggioranza dei casi, n&eacute; il problema n&eacute; le soluzioni sono 
          perfettamente definiti all'inizio dello sviluppo. Vengono determinati 
          progressivamente nel corso del progetto.</font></li>
        <li><font face="Arial, Helvetica, sans-serif">La soluzione al problema 
          &egrave; vincolata dalle caratteristiche delle tecnologie disponibili.</font></li>
      </ul>
      <p><font face="Arial, Helvetica, sans-serif">Ogni progetto di sviluppo software 
        ha degli obiettivi, che devono essere raggiunti per soddisfare il committente 
        e gli utilizzatori (anche quando, come normalmente accade, i requisiti 
        si chiariscono in corso d'opera). Ha un costo, che deve essere il minore 
        possibile. Ha dei tempi, anch'essi soggetti a vincoli. Si svolge in un 
        concreto contesto sociale, con concreti condizionamenti e vincoli culturali.</font></p>
      <h2>N&eacute; industria, n&eacute; edilizia</h2>
      <p><font face="Arial, Helvetica, sans-serif">Una certa tradizione tende, 
        equivocando, ad equiparare lo sviluppo software alla produzione di beni 
        industriali. </font></p>
      <p><font face="Arial, Helvetica, sans-serif">Secondo questo punto di vista, 
        se lo sviluppo software non avviene in modo &quot;industriale&quot; &egrave; 
        perch&eacute; si tratta di una disciplina ancora giovane, e bisogna compiere 
        ogni sforzo per allinearla al modo di operare dei settori pi&ugrave; maturi. 
        Di qui, l'idea di costruire &quot;software factories&quot;, fabbriche 
        del software. Di qui, anche, la tendenza a riproporre nello sviluppo software 
        modelli organizzativi basati sulla specializzazione dei ruoli e sulla 
        sequenzialit&agrave; della catena di montaggio (con un ritardo di un secolo 
        rispetto a quanto accade nelle vere aziende industriali...) [2].</font></p>
      <p><font face="Arial, Helvetica, sans-serif">In realt&agrave;, lo sviluppo 
        software non ha alcuna somiglianza con il processo di <i><b>produzione</b></i> 
        industriale. La &quot;produzione&quot;, cio&egrave; la creazione di migliaia 
        o milioni di copie identiche a partire da un modello, in un progetto software 
        ha un costo percentuale tendente allo zero. Lo sviluppo software ha, invece, 
        notevoli affinit&agrave; con la <b><i>progettazione</i></b> di nuovi prodotti 
        industriali. Dalla definizione dei primi modelli alla scrittura del codice 
        in un linguaggio di programmazione, tutto lo sviluppo software &egrave;, 
        a livelli di dettaglio diversi, un'attivit&agrave; di design. </font></p>
      <p><font face="Arial, Helvetica, sans-serif">L'analogia dello sviluppo software 
        con l'edilizia civile &egrave; pi&ugrave; recente, e certamente meno impropria, 
        rispetto a quella con la produzione industriale, perch&eacute; mette in 
        risalto gli aspetti di design, e in qualche modo l'unicit&agrave; del 
        prodotto dei progetti di sviluppo.</font></p>
      <p><font face="Arial, Helvetica, sans-serif">Esiste per&ograve; una differenza 
        di fondo, tra l'edilizia e lo sviluppo software. Quando si costruisce 
        una casa, la distinzione tra la fase di progettazione e la fase di realizzazione 
        dei lavori &egrave; <b>molto</b> marcata. Una volta realizzate, le decisioni 
        prese durante la progettazione edilizia sono modificabili solo con molta 
        fatica, perch&eacute; i materiali hanno il peso e l'inerzia derivanti 
        dalla loro fisicit&agrave;.</font></p>
      <p><font face="Arial, Helvetica, sans-serif">Nel software &egrave; diverso. 
        Tutto il progetto &egrave; design, non solo la fase iniziale. Ed &egrave;, 
        soprattutto, un design di astrazioni. Il &quot;materiale&quot; sono astrazioni, 
        che si potranno modificare in qualsiasi momento del progetto, e anche 
        in evoluzioni future del software prodotto. Anche le modifiche al software 
        costano fatica, ci mancherebbe. Ma costano molta meno fatica di quelle 
        necessarie per modificare scelte architetturali nel campo dell'edilizia, 
        perch&eacute; le astrazioni sono comunque pi&ugrave; malleabili del cemento 
        e dei mattoni.</font></p>
      <h2>Un lavoro che si svolge 
        in un contesto sociale concreto</h2>
      <p><font face="Arial, Helvetica, sans-serif">L'immagine pi&ugrave; nota 
        dello sviluppatore software &egrave; quella del &quot;geek&quot;, un giovane 
        maschio introverso e brufoloso che comunica il meno possibile, e quando 
        lo fa utilizza un incomprensibile gergo per iniziati. </font></p>
      <p><font face="Arial, Helvetica, sans-serif">In realt&agrave;, lo sviluppo 
        software &egrave; un lavoro in cui sono essenziali gli aspetti di comunicazione 
        e di relazione con gli altri. Aspetti illustrati in modo spesso realistico 
        nel cartoon Dilbert [3], e trattati in modo pi&ugrave; sistematico nel 
        classico Peopleware [4] e pi&ugrave; recentemente nei lavori di Alistair 
        Cockburn [5]. Ponendosi dal punto di vista della teoria dei giochi, Cockburn 
        evidenzia l'aspetto cooperativo delle attivit&agrave; di sviluppo:</font></p>
      <blockquote>&quot;Lo sviluppo software 
        &egrave; una serie di giochi cooperativi di invenzione e comunicazione, 
        con risorse limitate e finalizzati ad un obiettivo. L'obiettivo primario 
        di ogni gioco &egrave; la produzione e la consegna di un sistema software; 
        ci&ograve; che rimane alla fine del gioco &egrave; un insieme di note, 
        utilizzabili per assistere i giocatori del gioco successivo. Le persone 
        utilizzano note e appunti per ricordare, trarre indicazioni e comunicare 
        tra loro, allo scopo di passare alla mossa successiva del gioco. Il gioco 
        successivo &egrave; la variazione del sistema, oppure la creazione di 
        un sistema contiguo. Ogni gioco ha quindi come obiettivo secondario quello 
        di conseguire una posizione vantaggiosa per il gioco successivo. Poich&eacute; 
        ogni gioco si svolge a risorse limitate, l'obiettivo primario e quello 
        secondario competono tra loro per le risorse disponibili.&quot;</blockquote>
      <p><font face="Arial, Helvetica, sans-serif">Le interazioni sociali importanti 
        e determinanti per l'andamento e per l'esito del progetto sono pi&ugrave; 
        di una:</font></p>
      <ol>
        <li><font face="Arial, Helvetica, sans-serif">quelle tra chi vuole lo 
          sviluppo del sistema (il committente) e chi lo sviluppa (il fornitore-sviluppatore)</font></li>
        <li><font face="Arial, Helvetica, sans-serif">quelle tra il committente 
          e l'insieme delle parti interessate all'esito del progetto (gli stakeholder), 
          compresi i futuri utilizzatori</font></li>
        <li><font face="Arial, Helvetica, sans-serif">quelle interne al gruppo 
          di sviluppo (che in parecchi casi non &egrave; un gruppo unitario, ma 
          una serie di gruppi distinti che devono cooperare tra loro)</font></li>
      </ol>
      <p><font face="Arial, Helvetica, sans-serif">La prima relazione, tra il 
        committente e il fornitore, determina la gestione degli aspetti contrattuali 
        ed economici del progetto, il processo di sviluppo, il controllo sull'avanzamento 
        dei lavori, le modalit&agrave; di gestione dei rischi, le modalit&agrave; 
        di comunicazione e di gestione complessiva dei requisiti.</font></p>
      <p><font face="Arial, Helvetica, sans-serif">La seconda, tra il committente 
        e gli altri stakeholder, influenza la determinazione specifica dei requisiti 
        e delle priorit&agrave;, la gestione del conflitto tra esigenze concomitanti 
        e concorrenti, l'accettazione futura del sistema da parte di chi dovr&agrave; 
        utilizzarlo. </font></p>
      <p><font face="Arial, Helvetica, sans-serif">La terza, interna al gruppo 
        di sviluppo, influenza in modo determinante la produttivit&agrave; e la 
        qualit&agrave; del processo e del prodotto finale. </font></p>
      <hr>
      <p><font face="Arial, Helvetica, sans-serif">Riferimenti:</font></p>
      <p><font face="Arial, Helvetica, sans-serif">[1] - Philip Armour - <a href="http://www.amazon.com/exec/obidos/ASIN/0849314895/analisidisegnoco" target="_blank"><i>The 
        Laws of Software Process. A New Model for the Production and Management 
        of Software</i></a>, Auerbach 2004</font></p>
      <p><font face="Arial, Helvetica, sans-serif">[2] - Mary e Tom Poppendieck 
        - <a href="http://www.amazon.com/exec/obidos/ASIN/0321150783/analisidisegnoco" target="_blank"><i>Lean 
        Software Development</i></a>, Addison Wesley 2003</font></p>
      <p>[3] - Scott Adams - <a href="http://www.unitedfeatures.com/?title=Bio:Dilbert%20Dailies"><i>The 
        Dilbert Zone</i></a></p>
      <p><font face="Arial, Helvetica, sans-serif">[4] - Tom De Marco e Timothy 
        Lister - <a href="http://www.amazon.com/exec/obidos/ASIN/0932633439/analisidisegnoco"><em>Peopleware: 
        Productive Projects and Teams</em></a> , 2nd Edition Dorset House 1999 
        (1a edizione 1987)</font></p>
      <p><font face="Arial, Helvetica, sans-serif">[5] - Sito di <a href="http://alistair.cockburn.us" target="_blank">Alistair 
        Cockburn</a> , e dello stesso autore <i><a href="http://www.amazon.com/exec/obidos/ASIN/0201699699/analisidisegnoco" target="_blank">Agile 
        Software Development</a> </i> - Addison-Wesley 2001</font></p>
		  
	<hr />
	<p class="centered"><a href="../"> analisi-disegno.com </a>, servizi e materiali per lo sviluppo dei sistemi software, a cura di <a href="../a_comai/adriano_comai.htm">Adriano 
  		Comai</a>. </p>  
</body>
</html>
